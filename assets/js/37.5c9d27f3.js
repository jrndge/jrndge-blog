(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{399:function(e,s,t){"use strict";t.r(s);var n=t(7),a=Object(n.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"给cursor的提示词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给cursor的提示词"}},[e._v("#")]),e._v(" 给cursor的提示词")]),e._v(" "),s("p",[e._v("我的centos服务器上安装了docker,我想使用docker安装Jenkins,然后我的代码管理使用的是gitee,我想实现ci/cd自动化部署.请把每一步详细的步骤告诉我,并给出这一步执行后,会有什么效果代表正确.")]),e._v(" "),s("h2",{attrs:{id:"_1-创建-jenkins-数据卷和网络"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建-jenkins-数据卷和网络"}},[e._v("#")]),e._v(" 1.创建 Jenkins 数据卷和网络")]),e._v(" "),s("p",[s("em",[e._v("# 创建 Jenkins 数据卷")])]),e._v(" "),s("p",[e._v("docker volume create jenkins_home")]),e._v(" "),s("p",[s("em",[e._v("# 创建 Docker 网络（方便容器间通信）")])]),e._v(" "),s("p",[e._v("docker network create jenkins-net")]),e._v(" "),s("p",[s("em",[e._v("# 验证创建成功：")])]),e._v(" "),s("p",[e._v("docker volume ls  "),s("em",[e._v("# 应该能看到 jenkins_home")])]),e._v(" "),s("p",[e._v("docker network ls "),s("em",[e._v("# 应该能看到 jenkins-net")])]),e._v(" "),s("h2",{attrs:{id:"_2-运行-jenkins-容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-运行-jenkins-容器"}},[e._v("#")]),e._v(" 2.运行 Jenkins 容器")]),e._v(" "),s("p",[e._v("docker run -d "),s("br"),e._v("\n--name jenkins "),s("br"),e._v("\n--restart=always "),s("br"),e._v("\n--network jenkins-net "),s("br"),e._v("\n-p 8586:8080 "),s("br"),e._v("\n-p 51111:50000 "),s("br"),e._v("\n-v jenkins_home:/var/jenkins_home "),s("br"),e._v("\n-v /var/run/docker.sock:/var/run/docker.sock "),s("br"),e._v("\njenkins/jenkins:lts")]),e._v(" "),s("h4",{attrs:{id:"验证-jenkins-运行状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证-jenkins-运行状态"}},[e._v("#")]),e._v(" 验证 Jenkins 运行状态：")]),e._v(" "),s("p",[e._v("docker ps  # 应该能看到 jenkins 容器在运行")]),e._v(" "),s("h4",{attrs:{id:"查看初始管理员密码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看初始管理员密码"}},[e._v("#")]),e._v(" 查看初始管理员密码")]),e._v(" "),s("p",[e._v("docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword")]),e._v(" "),s("h4",{attrs:{id:"会输出一串密码-保存下来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#会输出一串密码-保存下来"}},[e._v("#")]),e._v(" 会输出一串密码，保存下来")]),e._v(" "),s("p",[e._v("25ac67d4dae8446c9cecdda9a4bd1271")]),e._v(" "),s("h2",{attrs:{id:"_3-初始化-jenkins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-初始化-jenkins"}},[e._v("#")]),e._v(" 3.初始化 Jenkins")]),e._v(" "),s("p",[s("em",[e._v("# 访问 Jenkins")])]),e._v(" "),s("p",[e._v("http://你的服务器IP:8586")]),e._v(" "),s("p",[e._v("51111开放端口")]),e._v(" "),s("p",[e._v("成功打开页面")]),e._v(" "),s("p",[e._v("http://1.94.235.68:8586/login?from=%2F")]),e._v(" "),s("p",[s("em",[e._v("# 验证：")])]),e._v(" "),s("p",[e._v("- 能打开 Jenkins 页面")]),e._v(" "),s("p",[e._v("- 使用上一步获取的密码可以登录")]),e._v(" "),s("h3",{attrs:{id:"选择-安装推荐的插件-这里选择推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择-安装推荐的插件-这里选择推荐"}},[e._v("#")]),e._v(' - 选择"安装推荐的插件"   这里选择推荐')]),e._v(" "),s("p",[e._v("- 等待插件安装完成（看到进度条完成）")]),e._v(" "),s("p",[e._v("- 创建管理员账户（记住你设置的用户名和密码）")]),e._v(" "),s("h2",{attrs:{id:"_4安装必要的-jenkins-插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4安装必要的-jenkins-插件"}},[e._v("#")]),e._v(" 4安装必要的 Jenkins 插件")]),e._v(" "),s("p",[e._v("在对应的路径下安装插件")]),e._v(" "),s("h4",{attrs:{id:"进入-jenkins-管理页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进入-jenkins-管理页面"}},[e._v("#")]),e._v(" 进入 Jenkins 管理页面：")]),e._v(" "),s("p",[e._v("Manage Jenkins -> Manage Plugins -> Available 标签")]),e._v(" "),s("h4",{attrs:{id:"搜索并安装以下插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搜索并安装以下插件"}},[e._v("#")]),e._v(" 搜索并安装以下插件：")]),e._v(" "),s("ul",[s("li",[e._v("Git")]),e._v(" "),s("li",[e._v("Gitee")]),e._v(" "),s("li",[e._v("Docker")]),e._v(" "),s("li",[e._v("Docker Pipeline")]),e._v(" "),s("li",[e._v("Pipeline")]),e._v(" "),s("li",[e._v("SSH Pipeline Steps")])]),e._v(" "),s("h4",{attrs:{id:"验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[e._v("#")]),e._v(" 验证：")]),e._v(" "),s("ul",[s("li",[e._v('插件安装后会显示"安装成功"')]),e._v(" "),s("li",[e._v("重启 Jenkins（安装完插件后）")])]),e._v(" "),s("h2",{attrs:{id:"_5配置-gitee-连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5配置-gitee-连接"}},[e._v("#")]),e._v(" 5配置 Gitee 连接")]),e._v(" "),s("h3",{attrs:{id:"在-gitee-中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-gitee-中"}},[e._v("#")]),e._v(" 在 Gitee 中：")]),e._v(" "),s("ol",[s("li",[e._v("访问 https://gitee.com")]),e._v(" "),s("li",[e._v("点击右上角头像 -> 设置 -> 私人令牌")]),e._v(" "),s("li",[e._v("生成新令牌（记得勾选 projects 权限）")])]),e._v(" "),s("h3",{attrs:{id:"在-jenkins-中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-jenkins-中"}},[e._v("#")]),e._v(" 在 Jenkins 中：")]),e._v(" "),s("ol",[s("li",[e._v("Manage Jenkins -> Manage Credentials -> System -> Global credentials -> Add Credentials")]),e._v(" "),s("li",[e._v("类型选择：Username with password")]),e._v(" "),s("li",[e._v("Username：你的 Gitee 用户名")]),e._v(" "),s("li",[e._v("Password：刚才生成的私人令牌")]),e._v(" "),s("li",[e._v("ID：gitee-token（记住这个ID）")])]),e._v(" "),s("h3",{attrs:{id:"验证-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证-2"}},[e._v("#")]),e._v(" 验证：")]),e._v(" "),s("ul",[s("li",[e._v("凭据列表中可以看到新添加的凭据")])]),e._v(" "),s("h2",{attrs:{id:"_6创建-jenkins-pipeline-项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6创建-jenkins-pipeline-项目"}},[e._v("#")]),e._v(" 6创建 Jenkins Pipeline 项目")]),e._v(" "),s("h3",{attrs:{id:"在-jenkins-首页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-jenkins-首页"}},[e._v("#")]),e._v(" 在 Jenkins 首页：")]),e._v(" "),s("ol",[s("li",[e._v('点击"新建任务"')]),e._v(" "),s("li",[e._v("输入项目名称")]),e._v(" "),s("li",[e._v('选择"Pipeline"')]),e._v(" "),s("li",[e._v("点击确定")])]),e._v(" "),s("h3",{attrs:{id:"在项目配置页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在项目配置页面"}},[e._v("#")]),e._v(" 在项目配置页面：")]),e._v(" "),s("ol",[s("li",[e._v('在"构建触发器"部分，勾选"Gitee webhook 触发构建"')]),e._v(" "),s("li",[e._v('在"Pipeline"部分，选择"Pipeline script from SCM"')]),e._v(" "),s("li",[e._v("SCM 选择 Git")]),e._v(" "),s("li",[e._v("填写你的 Gitee 仓库地址  使用https格式,先选择下方的凭证,不然会失败.")]),e._v(" "),s("li",[e._v("Credentials 选择刚才创建的凭据")]),e._v(" "),s("li",[e._v("指定分支（如 */master）")])]),e._v(" "),s("h3",{attrs:{id:"验证-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证-3"}},[e._v("#")]),e._v(" 验证：")]),e._v(" "),s("ul",[s("li",[e._v("保存配置后不报错")]),e._v(" "),s("li",[e._v('可以点击"立即构建"测试（暂时会失败，因为还没有配置 Jenkinsfile）')])]),e._v(" "),s("h2",{attrs:{id:"_6-1把自己本地的docker镜像打包之后发送到hub上进行使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1把自己本地的docker镜像打包之后发送到hub上进行使用"}},[e._v("#")]),e._v(" 6.1把自己本地的docker镜像打包之后发送到hub上进行使用")]),e._v(" "),s("h2",{attrs:{id:"_7-在项目根目录中创建-jenkinsfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-在项目根目录中创建-jenkinsfile"}},[e._v("#")]),e._v(" 7.在项目根目录中创建 Jenkinsfile")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v('pipeline {\n    agent any\nenvironment {\n    DOCKER_IMAGE = \'你的Docker用户名/项目名称\'\n    DOCKER_TAG = "${BUILD_NUMBER}"\n}\n\nstages {\n    stage(\'检出代码\') {\n        steps {\n            checkout scm\n        }\n    }\n    \n    stage(\'构建镜像\') {\n        steps {\n            sh """\n                docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .\n                docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest\n            """\n        }\n    }\n    \n    stage(\'部署\') {\n        steps {\n            sh """\n                docker-compose down\n                docker-compose up -d\n            """\n        }\n    }\n}\n}\n')])])]),s("h2",{attrs:{id:"_8-配置-gitee-webhook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-配置-gitee-webhook"}},[e._v("#")]),e._v(" 8.配置 Gitee WebHook")])])}),[],!1,null,null,null);s.default=a.exports}}]);